#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/objdetect.hpp>
#include <opencv2/videoio.hpp>
#include <iostream>

using namespace cv;
using namespace std;


int main() {
	string path = "Resources/img3.jpg";
	Mat img = imread(path);

	CascadeClassifier faceCasecade;
	faceCasecade.load("D:\\opencv\\sources\\data\\haarcascades\\haarcascade_frontalface_alt.xml");

	if (faceCasecade.empty()) cout << "XML file not loaded" << endl;

	vector<Rect> faces;
	faceCasecade.detectMultiScale(img, faces, 1.1, 10);

	for (int i = 0; i < faces.size(); i++) {
		rectangle(img, faces[i].tl(), faces[i].br(), Scalar(255, 0, 255), 3);
	}

	imshow("img", img);
	waitKey(0);
	return 0;
}
